// <auto-generated />
using AuthorizationAPI.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AuthorizationAPI.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20200822000210_AuthTyptTable")]
    partial class AuthTyptTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AuthorizationAPI.Domain.Models.AuthenticationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AuthenticationTypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuthenticationTypes");
                });

            modelBuilder.Entity("AuthorizationAPI.Domain.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AuthenticationTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AuthorizationAPI.Domain.Models.User", b =>
                {
                    b.HasOne("AuthorizationAPI.Domain.Models.AuthenticationType", "AuthenticationType")
                        .WithMany()
                        .HasForeignKey("AuthenticationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
